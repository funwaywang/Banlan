<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Banlan">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <ControlTemplate x:Key="ColorFormatComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="OutBox" CornerRadius="2" Background="{TemplateBinding Background}">
            <Path x:Name="Arrow"
                  HorizontalAlignment="Center" 
                  VerticalAlignment="Center" 
                  Data="M 0 0 L 4 4 L 8 0 Z" 
                  Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ColorFormatComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="16" />
                            </Grid.ColumnDefinitions>

                            <Rectangle Grid.Column="0" Margin="1" Fill="{StaticResource TransparentBackBrushKey}" />
                            <Rectangle Grid.Column="0" Stroke="Gray" StrokeThickness="0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding SelectedColor, Source={x:Static local:AppStatus.Default}}" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <local:ScreenColorPicker Grid.Column="0"/>
                            <TextBox Grid.Column="1" Margin="1,0"
                                     VerticalContentAlignment="Center"
                                     HorizontalContentAlignment="Center"
                                     BorderThickness="0"
                                     Text="{Binding SelectedColorText, Source={x:Static local:AppStatus.Default}, UpdateSourceTrigger=PropertyChanged}" />

                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="2"
                                          Template="{StaticResource ColorFormatComboBoxToggleButtonTemplate}"
                                          Focusable="false"
                                          ClickMode="Press"
                                          Background="Transparent"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Border x:Name="DropDownBorder" BorderThickness="1"
                                        MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                                    <ScrollViewer SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>