<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Banlan">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <Color x:Key="GlyphColor">#FF444444</Color>

    <Style TargetType="ListBoxItem" x:Key="TabItemStyle">
        <Setter Property="ToolTip" Value="{Binding FileName}" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="local:Commands.CloseTab" CommandParameter="{Binding}"></MenuItem>
                    <MenuItem Command="local:Commands.CloseOtherTabs" CommandParameter="{Binding}"></MenuItem>
                    <MenuItem Command="local:Commands.CloseAllTabs"></MenuItem>
                    <Separator />
                    <MenuItem Command="local:Commands.CopyFileName" CommandParameter="{Binding}"></MenuItem>
                    <MenuItem Command="local:Commands.OpenContainerFolder" CommandParameter="{Binding}"></MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="OutBox"
                            Padding="{TemplateBinding Padding}" 
                            BorderThickness="0,1,1,1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="IconBox" Content="{Binding Icon}" Margin="2,0,4,0" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Title}"/>
                            <TextBlock Grid.Column="2" x:Name="ModifiedFlag" VerticalAlignment="Center" Visibility="Collapsed" Margin="2,0">*</TextBlock>
                            <Button Grid.Column="3"
                                    Style="{StaticResource SmallCloseButtonStyle}"
                                    VerticalAlignment="Stretch"
                                    Margin="2,0,0,0"
                                    Visibility="{Binding CanClose, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Command="local:Commands.CloseTab"
                                    CommandParameter="{Binding}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                            <Setter TargetName="OutBox" Property="BorderThickness" Value="0,1,1,0" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsModified}" Value="True">
                            <Setter TargetName="ModifiedFlag" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RepeatButton" x:Key="TabBarRepeatButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="OutBox" Background="{TemplateBinding Background}" CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path x:Name="Arrow"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabBarDropDownButtonStyle" TargetType="{x:Type local:DropDownMenuButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DropDownMenuButton}">
                    <Border x:Name="OutBox" Background="{TemplateBinding Background}" CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path x:Name="Arrow"
                              Data="M 0 0 L 4 4 L 8 0 Z"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TabBar" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TabBar">
                    <Border BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer Grid.Column="1" Name="PART_ScrollViewer" CanContentScroll="True" Margin="0,0,0,-1">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="ScrollViewer">
                                        <ScrollContentPresenter />
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <StackPanel x:Name="ItemsPresenter" IsItemsHost="True" Orientation="Horizontal" />
                            </ScrollViewer>
                            <RepeatButton Grid.Column="0"
                                          Width="16"
                                          Margin="0"
                                          Style="{StaticResource TabBarRepeatButtonStyle}" 
                                          Background="Transparent"
                                          BorderThickness="0,0,1,0" BorderBrush="{TemplateBinding BorderBrush}"
                                          Visibility="{Binding IsOverflow, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          IsEnabled="{TemplateBinding CanScrollLeft}"
                                          Command="ScrollBar.LineLeftCommand"
                                          CommandTarget="{Binding ElementName=PART_ScrollViewer}"
                                          Content="M 4 0 L 4 8 L 0 4 Z"/>
                            <RepeatButton Grid.Column="2" 
                                          Width="16"
                                          Margin="0"
                                          Style="{StaticResource TabBarRepeatButtonStyle}"
                                          Background="Transparent"
                                          BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding BorderBrush}"
                                          Visibility="{Binding IsOverflow, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          IsEnabled="{TemplateBinding CanScrollRight}"
                                          Command="ScrollBar.LineRightCommand"
                                          CommandTarget="{Binding ElementName=PART_ScrollViewer}"
                                          Content="M 0 0 L 4 4 L 0 8 Z"/>
                            <local:DropDownMenuButton Grid.Column="3" 
                                                      Width="16"
                                                      Margin="0,1,0,0"
                                                      Background="Transparent"
                                                      BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}"
                                                      Style="{StaticResource TabBarDropDownButtonStyle}">
                                <local:DropDownMenuButton.Menu>
                                    <ContextMenu ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}">
                                        <ContextMenu.ItemContainerStyle>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="IsChecked" Value="{Binding IsSelected}" />
                                                <Setter Property="Command" Value="local:Commands.SelectDocumentView" />
                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                                <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                <Setter Property="Header" Value="{Binding Title}" />
                                                <Setter Property="ToolTip" Value="{Binding FileName}" />
                                            </Style>
                                        </ContextMenu.ItemContainerStyle>
                                    </ContextMenu>
                                </local:DropDownMenuButton.Menu>
                            </local:DropDownMenuButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>